<Window x:Class="SimsCCManager.Manager.ManagerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SimsCCManager.Manager"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    mc:Ignorable="d"
    Title="Sims CC Manager"
    ResizeMode="CanResize"
    WindowStartupLocation="CenterScreen"
    WindowState="Normal"
    d:DataContext="{DynamicResource ManagerWindowViewModel}"
    xmlns:gridns="clr-namespace:SimsCCManager.CustomUIElements"
    Closing="Window_Closing"
    Icon="img\simsccmanagericon.ico"
    Width="1000"
    Height="800"
    MinHeight="600">
    <Window.Resources>
        <gridns:StringMatchConverter x:Key="StringMatchConverter"/>
        <Style TargetType="Rectangle" x:Key="AlertIconsStyle">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label" x:Key="GridLabels">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="{StaticResource Brush55}"/>            
        </Style>
        <Style TargetType="TextBox" x:Key="GridBoxes">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="{StaticResource Brush55}"/>            
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="EnabledBoxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="{StaticResource EnabledBoxUncheck}" Width="20"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource EnabledBoxCheck}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource EnabledBoxHover}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" x:Key="SelectedBoxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="checkboxImage" Source="{StaticResource SelectedBoxUncheck}" Width="20"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource SelectedBoxCheck}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource SelectedBoxHover}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GameLabels" TargetType="Label">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="EditingLabels" TargetType="Label">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="EditingBoxes" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="EditingCombos" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
            </Style.Setters>
        </Style>
        <Style x:Key="InfoLabels" TargetType="Label">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>
        <Style x:Key="InfoButtons" TargetType="Button">
            <Style.Setters>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0, 5, 0, 0"/>                
            </Style.Setters>
        </Style>

        <Style x:Key="ToolBarButtonStyle" TargetType="Button">
          <Setter Property="Margin" Value="2"/>
          <Setter Property="Height" Value="25"/>
          <Setter Property="Width" Value="25"/>
          <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
        </Style>

        <Style x:Key="ColumnHeaderStyle" TargetType="TextBlock">
          <Setter Property="FontSize" Value="20"/>
          <Setter Property="Foreground" Value="{StaticResource Brush4}"/>
        </Style>

        <Style x:Key="ModListGridViewStyle" TargetType="GridViewRowPresenter">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModListViewStyle" TargetType="ListView">
          <!--<Style.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Background" Value="{StaticResource Brush2}"/>
              </Trigger>
          </Style.Triggers>-->
        </Style>

        <Style x:Key="NewDownloadsViewStyle" TargetType="ListView">
          <Style.Triggers>
              <!--<Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Cursor" Value="Hand"/>
              </Trigger>-->
          </Style.Triggers>
        </Style>

        <Style x:Key="EnabledModsViewStyle" TargetType="ListView">
          <Style.Triggers>
              <!--<Trigger Property="IsMouseOver" Value="true">
                  <Setter Property="Cursor" Value="Hand"/>
              </Trigger>-->
          </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid x:Name="MainGrid" Visibility="{Binding ShowMainGrid}">    
        <Border BorderBrush="{StaticResource BarBrush}" BorderThickness="2" Background="Transparent">
            <Grid Background="{StaticResource MainBackgroundBrush}" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition/> <!-- Main Content (Row 2)-->
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>                        
                
                <!-- Header Buttons -->  

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <Button ToolTip="Edit Profiles" Command="{Binding ViewProfiles}" Template="{StaticResource TopBarButton}" Width="30" Height="30" Tag="{StaticResource ProfilesIcon}" Foreground="{StaticResource Brush13}"/>
                        <ComboBox Width="200" Height="20" DisplayMemberPath="Name" ItemsSource="{Binding Profiles}" SelectedItem="{Binding CurrentProfile, Mode=TwoWay}"  IsSynchronizedWithCurrentItem="True" Margin="5, 0, 5, 0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="2">   
                        <Button ToolTip="Add Mods to Instance" Command="{Binding AddMods}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource AddIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Add Folder to Instance" Command="{Binding AddFolder}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource AddFolderIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Refresh Modlist" Command="{Binding RefreshList}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource RefreshIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Sort into Subfolders" Command="{Binding SortFiles}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource SortIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Scan All Mods" Command="{Binding ScanAll}" Template="{StaticResource TopBarButton}" Width="45" Height="45" Tag="{StaticResource ScanAllIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Manage Categories" Command="{Binding ViewCategories}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource CategoriesIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Edit Executables" Command="{Binding EditExecutables}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource EditExeIcon}" Foreground="{StaticResource Brush13}"/>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Right">
                        <Button ToolTip="Swap Instances" Click="SwapInstances_Click" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource SwapIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Settings" Command="{Binding Settings}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource SettingsIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="View Errors" Command="{Binding ViewErrors}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource ErrorsIcon}" Foreground="{StaticResource Brush13}"/>
                        <Button ToolTip="Help" Command="{Binding Help}" Template="{StaticResource TopBarButton}" Width="40" Height="40" Tag="{StaticResource HelpIcon}" Foreground="{StaticResource Brush13}"/>                    
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center" Margin="0, 10, 0, 0">                        
                        <Button ToolTip="Change Executable" Command="{Binding ChangeExe}" Template="{StaticResource TopBarButton}" Width="50" Height="50" Tag="{StaticResource ChangeExeIcon}" Foreground="{StaticResource Brush1}" Padding="0"/>
                        <Image Source="{Binding GameIcon}" Width="45"/>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Label Content="{Binding CurrentProfile.Name}" FontFamily="Arial" FontSize="20" Margin="0, 2, 0, 0" Foreground="{StaticResource Brush15}"/>
                            <Label Content="{Binding ActiveExe}" FontFamily="Arial" FontSize="14" Margin="0, 2, 0, 0" Foreground="{StaticResource Brush15}"/>
                        </StackPanel>
                        <Button ToolTip="Play" Command="{Binding PlayGame}" Template="{StaticResource TopBarButton}" Width="60" Height="75" Tag="{StaticResource PlayIcon}" Foreground="{StaticResource Brush1}" Padding="0"/>
                    </StackPanel>
                </Grid>






                <!-- Actual app content -->
                
                <!-- Mods View -->

                <Grid Grid.Row="2">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                  </Grid.ColumnDefinitions>
                  <GridSplitter Grid.Column="2" Width="3" HorizontalAlignment="Stretch" Foreground="{StaticResource Brush58}" />
                  <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="30"/>
                      <RowDefinition/>
                      <RowDefinition Height="{Binding InfoBoxHeight}"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="0">
                        <TextBlock Grid.Row="0" Text="All Mods" Style="{StaticResource ColumnHeaderStyle}"/>
                        <TextBox Text="{Binding SearchAM, UpdateSourceTrigger=PropertyChanged}" Width="200" Height="20" FontSize="16" FontFamily="Arial" Margin="10, 0, 0, 0"/>
                    </StackPanel> 
                    
                    <Grid Grid.Row="1">
                        <gridns:CustomDataGrid x:Name="AllMods" SelectedItemsList="{Binding SelectedMods, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GridLinesVisibility="None" Background="{StaticResource Brush58}" AlternatingRowBackground="{StaticResource Brush61}" VerticalAlignment="Stretch" ItemsSource="{Binding InstanceModsCV}" Grid.Row="1" AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="FullRow">
                            <DataGrid.Resources>                            
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource Color27}" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{StaticResource Color28}" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                <Style TargetType="{x:Type DataGrid}">
                                    <Setter Property="RowStyle" >
                                        <Setter.Value>
                                            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                                <!--<Setter Property="Background" Value="{StaticResource Brush58}" />-->
                                                <Setter Property="Foreground" Value="{StaticResource Brush55}" />
                                                <Setter Property="Background" Value="{Binding Category.ColorBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush21}"></Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush48}"></Setter>
                                                    </Trigger>
                                                </Style.Triggers>                            
                                            </Style>
                                        </Setter.Value>
                                    </Setter>                                
                                </Style>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                                <ContextMenu x:Key="DataGridContextMenu"> 
                                    <MenuItem Header="Add to Category" ItemsSource="{Binding DataContext.Categories, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                                        <MenuItem.ItemTemplate>
                                            <DataTemplate>
                                                <MenuItem CommandTarget="{Binding}" Command="{Binding DataContext.AddToCategoryClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                                                    <MenuItem.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Rectangle Width="30" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0, 0, 10, 0">
                                                                <Rectangle.Fill>
                                                                    <SolidColorBrush Color="{Binding ColorBrush}" />
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <TextBlock>
                                                            <TextBlock.Text><Binding StringFormat="Category: {0}" /></TextBlock.Text>
                                                            </TextBlock>
                                                        </StackPanel>                        
                                                    </MenuItem.Header>
                                                </MenuItem>
                                            </DataTemplate>
                                        </MenuItem.ItemTemplate>                                
                                    </MenuItem>
                                    <MenuItem Header="Edit Details" Command="{Binding DataContext.EditDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                    
                                    <MenuItem Header="Scan" Command="{Binding DataContext.ScanFile, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                    
                                    <MenuItem Header="Toggle Root" Command="{Binding DataContext.MakeRoot, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
        
                                    <MenuItem Header="Toggle Out of Date" Command="{Binding DataContext.MarkOOD, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>                          
                                    
                                    <MenuItem Header="Add Creator" Command="{Binding DataContext.AddCreator, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                    
                                    <MenuItem Header="Add Source Link" Command="{Binding DataContext.AddSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/> 
                                    
                                    <MenuItem Header="Rename from Title" Command="{Binding DataContext.RenameFile, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/> 
                                    
                                    <Separator/>
                                    
                                    <MenuItem Header="Move Mod">
                                        <MenuItem Header="Into Subfolder" Command="{Binding DataContext.MoveFileToSubfolder, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                        <MenuItem Header="To Another Instance" Command="{Binding DataContext.MoveFileToInstance, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                    </MenuItem> 
                                    
                                    <MenuItem Header="Delete Files" Command="{Binding DataContext.DeleteFile, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                    
                                    <MenuItem Header="Add Note" Command="{Binding DataContext.AddNote, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                                </ContextMenu>
                            </DataGrid.Resources>
                            <DataGrid.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding EditingNameClick}"/>
                                <KeyBinding Key="Escape" Command="{Binding NameEditEscapeKey}"/>
                                <KeyBinding Key="Enter" Command="{Binding NameEditEnterKey}"/>
                            </DataGrid.InputBindings>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridContextMenu}"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <!--<DataGridTemplateColumn  Width="22">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Padding="0" Style="{StaticResource SelectedBoxStyle}" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding SelectedClick}" CommandParameter="{Binding Path=IsSelected, Mode=TwoWay, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"/>
                                        </DataTemplate>                                    
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                                <DataGridTemplateColumn Width="22" SortMemberPath="Enabled" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <CheckBox x:Name="EnabledCheck" Padding="0" Style="{StaticResource EnabledBoxStyle}" IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding EnabledClick}" CommandParameter="{Binding Path=Enabled, Mode=TwoWay, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"/>
                                                <Rectangle x:Name="IsGroupIcon" Width="20" Height="20" Fill="{StaticResource Brush4}" ToolTip="This is a group">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource IconGroup}"/>                      
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </Grid>                                        
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                                    <Setter TargetName="EnabledCheck" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsGroup}" Value="False">
                                                    <Setter TargetName="IsGroupIcon" Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate> 
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="300" Header="Name" SortMemberPath="Name" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Label x:Name="NameLabel" Visibility="Visible" Content="{Binding Name}" Style="{StaticResource GridLabels}"/>
                                                <TextBox x:Name="NameBox" Visibility="Hidden" Text="{Binding DataContext.NameChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Style="{StaticResource GridBoxes}"/>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding EditingName}" Value="True">
                                                    <Setter TargetName="NameBox" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="SizeToHeader" Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle x:Name="IMGAlertRoot" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush19}" ToolTip="Root Mod">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertRoot}"/>                      
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertOutOfDate" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush17}" ToolTip="Mod Out of Date">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertOutOfDate}"/>                      
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertBroken" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush66}" ToolTip="Mod Broken">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertBroken}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertConflicts" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush71}" ToolTip="Has Conflicts">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertConflicts}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertWrongGame" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush65}" ToolTip="Wrong Game">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertWrongGame}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertOverride" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush85}" ToolTip="Override">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertOverride}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertOrphan" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush88}" ToolTip="Orphan Mod">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertOrphan}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Rectangle x:Name="IMGAlertFave" Style="{StaticResource AlertIconsStyle}" Fill="{StaticResource Brush1}" ToolTip="Fave Mod">
                                                    <Rectangle.OpacityMask>
                                                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource AlertFave}"/>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Root}" Value="True">
                                                    <Setter TargetName="IMGAlertRoot" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Root}" Value="False">
                                                    <Setter TargetName="IMGAlertRoot" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OutOfDate}" Value="True">
                                                    <Setter TargetName="IMGAlertOutOfDate" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OutOfDate}" Value="False">
                                                    <Setter TargetName="IMGAlertOutOfDate" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Broken}" Value="True">
                                                    <Setter TargetName="IMGAlertBroken" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Broken}" Value="False">
                                                    <Setter TargetName="IMGAlertBroken" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Conflicts}" Value="True">
                                                    <Setter TargetName="IMGAlertConflicts" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Conflicts}" Value="False">
                                                    <Setter TargetName="IMGAlertConflicts" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding WrongGame}" Value="True">
                                                    <Setter TargetName="IMGAlertWrongGame" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding WrongGame}" Value="False">
                                                    <Setter TargetName="IMGAlertWrongGame" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Override}" Value="True">
                                                    <Setter TargetName="IMGAlertOverride" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Override}" Value="False">
                                                    <Setter TargetName="IMGAlertOverride" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Orphan}" Value="True">
                                                    <Setter TargetName="IMGAlertOrphan" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Orphan}" Value="False">
                                                    <Setter TargetName="IMGAlertOrphan" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Fave}" Value="True">
                                                    <Setter TargetName="IMGAlertFave" Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Fave}" Value="False">
                                                    <Setter TargetName="IMGAlertFave" Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="SizeToHeader" Header="Creator" SortMemberPath="Creator" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding Creator}" Style="{StaticResource GridLabels}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="SizeToHeader" Header="DateAdded" SortMemberPath="DateAdded" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding DateAdded}" Style="{StaticResource GridLabels}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="SizeToHeader" Header="DateUpdated" SortMemberPath="DateUpdated" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding DateUpdated}" Style="{StaticResource GridLabels}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="50" Header="Game" SortMemberPath="Game" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label x:Name="GameLabel" Content="Unknown" Padding="0" Style="{StaticResource GridLabels}"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Game}" Value="The Sims 2">
                                                <Setter TargetName="GameLabel" Property="Content" Value="Sims 2"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Game}" Value="The Sims 3">
                                                <Setter TargetName="GameLabel" Property="Content" Value="Sims 3"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Game}" Value="The Sims 4">
                                                <Setter TargetName="GameLabel" Property="Content" Value="Sims 4"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                                <Setter TargetName="GameLabel" Property="Content" Value=""/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="SizeToHeader" Header="Scanned" SortMemberPath="Scanned" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label x:Name="ScannedLabel" Content="" Padding="0" Style="{StaticResource GridLabels}"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Scanned}" Value="False">
                                                <Setter TargetName="ScannedLabel" Property="Content" Value="No"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Scanned}" Value="True">
                                                <Setter TargetName="ScannedLabel" Property="Content" Value="Yes"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                                <Setter TargetName="ScannedLabel" Property="Content" Value=""/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="SizeToHeader" Header="Script" SortMemberPath="Script" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label x:Name="ScriptLabel" Content="" Padding="0" Style="{StaticResource GridLabels}"/>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding HasScript}" Value="False">
                                                <Setter TargetName="ScriptLabel" Property="Content" Value="No"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding HasScript}" Value="True">
                                                <Setter TargetName="ScriptLabel" Property="Content" Value="Yes"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                                <Setter TargetName="ScriptLabel" Property="Content" Value=""/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn  Width="SizeToHeader" Header="File Type" SortMemberPath="Type" CanUserSort="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label x:Name="TypeLabel" Content="{Binding Type}" Padding="0" Style="{StaticResource GridLabels}"/>
                                            <DataTemplate.Triggers>                                            
                                                <DataTrigger Binding="{Binding TypeLabel}" Value="True">
                                                    <Setter TargetName="TypeLabel" Property="Content" Value=""/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>                            
                            </DataGrid.Columns>
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <ListView x:Name="FilesView" MaxHeight="150" MinHeight="0" ItemsSource="{Binding Files}" Background="{StaticResource Brush58}" Foreground="{StaticResource Brush55}" Validation.ErrorTemplate="{x:Null}" Margin="5, 0, 0, 0" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"/>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Combined}" Value="False">
                                            <Setter TargetName="FilesView" Property="Height" Value="0"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>                        
                        </gridns:CustomDataGrid>
                    </Grid>

                    
                    
                    
                    
                    <!--<Grid Grid.Row="2" Margin="0, 5, 0, 0">
                        <Border BorderBrush="{StaticResource Brush38}" BorderThickness="2" Background="{StaticResource Brush82}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Vertical" Grid.Column="0" Margin="5, 5, 0, 0">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Label Content="Category: " Style="{StaticResource InfoLabels}" Margin="0, 0, 5, 0"/>
                                        <ComboBox Width="150" Height="20" ItemsSource="{Binding Categories}" SelectedItem="{Binding CategoryPick, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="Add a Note" Style="{StaticResource InfoButtons}" Width="125"/>
                                        <Button Content="Update" Style="{StaticResource InfoButtons}" Width="125"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="Edit Selected" Style="{StaticResource InfoButtons}" Width="125"/>
                                        <Button Content="Move Selected" Style="{StaticResource InfoButtons}" Width="125"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="Delete Selected" Style="{StaticResource InfoButtons}" Width="125"/>
                                        <Button Content="Scan Selected" Style="{StaticResource InfoButtons}" Width="125"/>
                                    </StackPanel>
                                    <Button Content="Rename Selected from Internal" HorizontalAlignment="Center" Style="{StaticResource InfoButtons}" Width="250"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Grid.Column="1" Margin="5, 5, 5, 0" VerticalAlignment="Top">
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0, 5, 0, 0">
                                        <Label Content="Root" Style="{StaticResource InfoLabels}" Margin="0, 0, 5, 0"/>
                                        <CheckBox Height="20" Width="20" IsThreeState="True" IsChecked="{Binding RootCheckbox}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0, 5, 0, 0">
                                        <Label Content="Out of Date" Style="{StaticResource InfoLabels}" Margin="0, 0, 5, 0"/>
                                        <CheckBox Height="20" Width="20" IsThreeState="True" IsChecked="{Binding OODCheckbox}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0, 5, 0, 0">
                                        <Label Content="Favorite" Style="{StaticResource InfoLabels}" Margin="0, 0, 5, 0"/>
                                        <CheckBox Height="20" Width="20" IsThreeState="True" IsChecked="{Binding FaveCheckbox}"/>
                                    </StackPanel>
                                    
                                    
                                    
                                </StackPanel>
                            </Grid>                        
                        </Border>
                    </Grid>-->
                  </Grid>

                  










                  
                  <!-- Enabled Mods View -->
                    
                    <Grid Grid.Column="3">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                      </Grid.RowDefinitions>
                      <GridSplitter Grid.Row="1" Height="3" HorizontalAlignment="Stretch" Foreground="{StaticResource Brush58}" />
                      <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Grid.Row="0" Text="Enabled Mods" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBox Text="{Binding SearchEM, UpdateSourceTrigger=PropertyChanged}" Width="200" Height="20" FontSize="16" FontFamily="Arial" Margin="10, 0, 0, 0"/>
                          </StackPanel>   
                          <ListView x:Name="EnabledMods" Grid.Row="1" ItemsSource="{Binding EnabledModsCV}" IsSynchronizedWithCurrentItem="True" Style="{StaticResource EnabledModsViewStyle}" SelectionMode="Extended" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                                                      Background="{TemplateBinding Background}">
                                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                                          Margin="{TemplateBinding Padding}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush24}"></Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush48}"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>                            
                                </Style>
                              </ListBox.ItemContainerStyle>
                            <ListView.Resources>
                                
                              </ListView.Resources>
                              <ListView.View>
                                <GridView AllowsColumnReorder="True">
                                  <GridViewColumn DisplayMemberBinding="{Binding Name}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Name" Command="{Binding EMHeaderName}">Name</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding Creator}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Creator" Command="{Binding CreatorFunction}">Creator</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding DateEnabled}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="DateEnabled" Command="{Binding HeaderDateEnabled}">Date Enabled</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding Type}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Type" Command="{Binding HeaderType}">Location</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>                           
                                  <GridViewColumn DisplayMemberBinding="{Binding Root}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Root" Command="{Binding HeaderRoot}">Root</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding Size}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Size" Command="{Binding HeaderSize}">Size</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>                                  
                                  <GridViewColumn DisplayMemberBinding="{Binding HasScript}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="HasScript" Command="{Binding HeaderHasScript}">Script Mod</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                </GridView>
                              </ListView.View>
                          </ListView>
                      </Grid>

                      <!-- Downloads view -->

                      <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                          </Grid.RowDefinitions>
                          <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <TextBlock Grid.Row="0" Text="New Downloads" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderStyle}"/>
                            <TextBox Text="{Binding SearchDL, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Width="200" Height="20" FontSize="16" FontFamily="Arial" Margin="10, 0, 0, 0"/>
                        </StackPanel>   
                          <ListView Grid.Row="1" ItemsSource="{Binding DownloadsCV}" IsSynchronizedWithCurrentItem="True" Style="{StaticResource NewDownloadsViewStyle}" SelectionMode="Extended" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                                                      Background="{TemplateBinding Background}">
                                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                                          Margin="{TemplateBinding Padding}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush24}"></Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush48}"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>                            
                                </Style>
                              </ListBox.ItemContainerStyle>
                            <ListView.Resources>
                                <Style TargetType="{x:Type ListViewItem}">                        
                                    <Style.Triggers>
                                                                            
                                    </Style.Triggers>
                                </Style>
                              </ListView.Resources>
                              <ListView.View>
                                <GridView AllowsColumnReorder="True">
                                  <GridViewColumn DisplayMemberBinding="{Binding Name}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Name" Command="{Binding DLHeaderName}">Name</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding Extension}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Extension" Command="{Binding DLHeaderType}">Type</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding DateAdded}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="DateAdded" Command="{Binding DLHeaderDateAdded}">Date Added</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                  <GridViewColumn DisplayMemberBinding="{Binding Installed}" Width="Auto">
                                      <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Installed" Command="{Binding DLHeaderInstalled}">Installed</GridViewColumnHeader>
                                      </GridViewColumn.Header>
                                  </GridViewColumn>
                                </GridView>
                              </ListView.View>
                          </ListView>
                      </Grid>
                    </Grid>
                  
                </Grid>


                <!-- Bottom Bar -->

                
                <Rectangle Grid.Column="0" Grid.Row="4" Fill="{StaticResource BarBrush}" Stretch="Fill"/>
                <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Name="TwitterButton" Tag="{StaticResource IconTwitter}" Template="{StaticResource SocialsButton}" Height="25" Width="25" Margin="0, 0, 5, 0" Command="{Binding TwitterButton}" Padding="0" Background="Transparent" Foreground="{StaticResource Brush5}" BorderThickness="0"/> 
                    <Button Name="TumblrButton" Tag="{StaticResource IconTumblr}" Template="{StaticResource SocialsButton}" Height="25" Width="25" Margin="0, 0, 5, 0" Command="{Binding TumblrButton}" Padding="0" Background="Transparent" Foreground="{StaticResource Brush5}" BorderThickness="0"/> 
                    <Button Name="KofiButton" Tag="{StaticResource IconKofi}" Template="{StaticResource SocialsButton}" Height="25" Width="40" Margin="0, 0, 5, 0" Command="{Binding KofiButton}" Padding="0" Background="Transparent" Foreground="{StaticResource Brush5}" BorderThickness="0"/> 
                    <Button Name="GithubButton" Tag="{StaticResource IconGithub}" Template="{StaticResource SocialsButton}" Height="25" Width="25" Margin="0, 0, 5, 0" Command="{Binding GitButton}" Padding="0" Background="Transparent" Foreground="{StaticResource Brush5}" BorderThickness="0"/> 
                    <Button Name="DiscordButton" Tag="{StaticResource IconDiscord}" Template="{StaticResource SocialsButton}" Height="30" Width="30" Margin="0, 0, 5, 0" Command="{Binding DiscordButton}" Padding="0" Background="Transparent" Foreground="{StaticResource Brush5}" BorderThickness="0"/> 
                </StackPanel>    

                <Grid Grid.Row="5">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Label Content="Sims CC Manager | Alpha 1.0" FontFamily="fonts/#Accidental Presidency" Foreground="{StaticResource FontBrush}" FontSize="25" HorizontalAlignment="Left" Margin="10, 0, 0, 0"/>
                        <Button Command="{Binding ReportABug}" Margin="25, 0, 0, 0" Height="20" Width="150" Template="{StaticResource StandardButtonTemplate}" Padding="0">
                            <Label Content="Report a bug?" Foreground="{StaticResource Brush3}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="0"/>
                        </Button>
                        <Button Command="{Binding DevTest}" Margin="-65, 0, 0, 0" Height="20" Width="150" Template="{StaticResource StandardButtonTemplate}" Visibility="{Binding DebugModeVis}" Padding="0">
                            <Label Content="Dev Test Button" Foreground="{StaticResource Brush3}" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="0"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <Rectangle Grid.Row="1" Stretch="Fill" Fill="AliceBlue" Opacity="0" Visibility="{Binding PopupGreyed}"/>
                <Rectangle Grid.Row="2" Stretch="Fill" Fill="AliceBlue" Opacity="0" Visibility="{Binding PopupGreyed}"/>
                 <!--
                <Grid Visibility="{Binding FoundZipsGridVis}" Grid.Row="2" Width="400" Height="200">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock Width="350" Margin="0, 0, 0, 5" FontFamily="Arial" FontSize="14" Foreground="{StaticResource BarTextBrush}" Text="There are compressed files in your mod folder. These files will not be processed as mods and should be processed as downloads. Automatically move compressed files to Downloads folder?" TextAlignment="Center" TextWrapping="Wrap"/>
                        <TextBlock Width="350" Margin="0, 0, 0, 25" FontFamily="Arial" FontSize="12" Foreground="{StaticResource BarTextBrush}" Text="(If you select no, this message will not show again. You can change this decision in Settings)" TextAlignment="Center" TextWrapping="Wrap"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Grid Width="100" Height="30" Margin="0, 0, 50, 0">
                                <Border CornerRadius="10" Background="{StaticResource ButtonBrush}" BorderBrush="{StaticResource ButtonBrush}">                                
                                </Border>
                                <Button Command="{Binding MoveZipsYes}" Width="100" Height="30" Padding="0" FontSize="14" Foreground="{StaticResource ButtonTextBrush}" Content="Yes"/>
                            </Grid>
                            <Grid Width="100" Height="30" >
                                <Border CornerRadius="10" Background="{StaticResource ButtonBrush}" BorderBrush="{StaticResource ButtonBrush}">                                
                                </Border>
                                <Button Command="{Binding MoveZipsNo}" Width="100" Height="30" Padding="0" FontSize="14" Foreground="{StaticResource ButtonTextBrush}" Content="No"/>
                            </Grid>
                        </StackPanel>
                    </StackPanel>                    
                </Grid>   
                
                <Grid Visibility="{Binding EditScreenVis}" Grid.Row="2" Width="700" Height="500">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>
                    <StackPanel Background="LightGray" Width="650" Height="450" Orientation="Vertical">
                        <Grid Width="650" Height="200" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="320"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="320"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" Grid.Row="0" Content="Name" Style="{StaticResource EditingLabels}"/>
                            <Label Grid.Column="0" Grid.Row="1" Content="Creator" Style="{StaticResource EditingLabels}"/>
                            <Label Grid.Column="0" Grid.Row="2" Content="Source Link" Style="{StaticResource EditingLabels}"/>
                            <Label Grid.Column="0" Grid.Row="3" Content="Category" Style="{StaticResource EditingLabels}"/>
                            
                            <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding EditingMod.Name}" Style="{StaticResource EditingBoxes}"/>
                            <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding EditingMod.Creator}" Style="{StaticResource EditingBoxes}"/>
                            <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding EditingMod.Source}" Style="{StaticResource EditingBoxes}"/>
                            <ComboBox Grid.Column="2" Grid.Row="3" Style="{StaticResource EditingCombos}" ItemsSource="{Binding Categories}" SelectedItem="{Binding EditingMod.Category, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True" />
                            
                        </Grid>   
                        <Grid Width="650" Height="200" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 10, 0, 0">
                            <StackPanel Orientation="Vertical" Height="200">
                                <Label Grid.Column="0" Grid.Row="4" Content="Notes" Style="{StaticResource EditingLabels}"/>
                                <TextBox Grid.Column="2" Grid.Row="4" VerticalAlignment="Stretch" Height="200" Text="{Binding EditingMod.Notes}" Style="{StaticResource EditingBoxes}"/>
                            </StackPanel>
                        </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button Height="30" Width="200" Content="Save" Command="{Binding SaveModEdit}" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 10, 0"/>
                            <Button Height="30" Width="200" Content="Cancel" Command="{Binding CancelModEdit}" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                        </StackPanel>
                    </StackPanel>
                               
                </Grid>

                <Grid Visibility="{Binding CategoryScreenVis}" Grid.Row="2" Width="350" Height="300">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Categories" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0, 15, 0, 0"  FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                        <ListView Grid.Column="1" SelectionMode="Single"  IsSynchronizedWithCurrentItem="True"  ItemsSource="{Binding CategoriesCV}" Background="#FFE0E3E7" Foreground="#FF272525" Height="230" HorizontalAlignment="Center" VerticalAlignment="Center" Width="175" Margin="0, 30, 0, 10">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                                                      Background="{TemplateBinding Background}">
                                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                                          Margin="{TemplateBinding Padding}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush35}"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>                            
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListView.View>
                                <GridView AllowsColumnReorder="True">
                                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Width="100">
                                        <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Name" Command="{Binding CatHeaderName}">Name</GridViewColumnHeader>                                  
                                        </GridViewColumn.Header>                              
                                    </GridViewColumn>
                                    <GridViewColumn Width="50">
                                        <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Color" Command="{Binding CatHeaderColor}">Color</GridViewColumnHeader>                                  
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>                                                
                                                <Rectangle Width="50" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{Binding ColorBrush}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Orientation="Vertical" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 45, 0, 0">
                            <Button Content="New" Command="{Binding NewCategory}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Edit" Command="{Binding EditCategory}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Delete" Command="{Binding DeleteCategory}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Close" Command="{Binding CloseCategoryWindow}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 75, 0, 0"/>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid Visibility="{Binding NewCategoryVis}" Grid.Row="2" Width="400" Height="400">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>                    
                    <StackPanel Width="350" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Label Content="{Binding NewCatLabel}" FontFamily="Arial" FontSize="26" Foreground="{StaticResource FontBrush}"/>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Name" Width="175" FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                            <TextBox Text="{Binding NewCategoryName}" Width="175" FontFamily="Arial" Height="25" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Description" Width="175" FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                            <TextBox Text="{Binding NewCategoryDescription}" Height="50" Width="175" FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                        </StackPanel>
                        <Grid>
                            <Rectangle Width="203" Height="33" Fill="#FF000000" Margin="0, 5, 0, 0">
                            </Rectangle>
                            <Rectangle Width="200" Height="30" Margin="0, 5, 0, 0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding NewCategoryColorBrush}" />
                                </Rectangle.Fill>
                            </Rectangle>                            
                        </Grid>
                        <Button Content="Pick Category Color" Command="{Binding CategoryPickColor}" Padding="0" Height="25" FontFamily="Arial" FontSize="15" Width="200" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Content="Save" Command="{Binding SaveCategory}"  Padding="0" Width="100" Height="25" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 10, 0"/>
                            <Button Content="Cancel" Command="{Binding CancelCategory}" Padding="0" Width="100" Height="25" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                        </StackPanel>                        
                    </StackPanel>
                </Grid>
                
                <Grid Visibility="{Binding ProfileScreenVis}" Grid.Row="2" Width="350" Height="300">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Profiles" Grid.Column="3" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0, 15, 0, 0"  FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                        <ListView Grid.Column="3" SelectionMode="Single"  IsSynchronizedWithCurrentItem="True"  ItemsSource="{Binding ProfilesCV}" Background="#FFE0E3E7" Foreground="#FF272525" Height="230" HorizontalAlignment="Center" VerticalAlignment="Center" Width="175" Margin="0, 30, 0, 10">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                                                      Background="{TemplateBinding Background}">
                                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                                          Margin="{TemplateBinding Padding}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource Brush35}"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>                            
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListView.View>
                                <GridView AllowsColumnReorder="True">
                                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Width="100">
                                        <GridViewColumn.Header>
                                          <GridViewColumnHeader Tag="Name" Command="{Binding CatHeaderName}"></GridViewColumnHeader>                                  
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <StackPanel Orientation="Vertical" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 45, 0, 0">
                            <Button Content="New" Command="{Binding NewProfile}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Edit" Command="{Binding EditProfile}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Duplicate" Command="{Binding DuplicateProfile}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Delete" Command="{Binding DeleteProfile}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                            <Button Content="Close" Command="{Binding CloseProfileWindow}" Width="90" Height="25" Padding="0" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 75, 0, 0"/>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid Visibility="{Binding NewProfileVis}" Grid.Row="2" Width="400" Height="200">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border>                    
                    <StackPanel Width="350" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Label Content="{Binding NewProfileLabel}" FontFamily="Arial" FontSize="26" Foreground="{StaticResource FontBrush}"/>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Name" Width="175" FontFamily="Arial" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                            <TextBox Text="{Binding NewProfileName}" Width="175" FontFamily="Arial" Height="25" FontSize="16" Foreground="{StaticResource FontBrush}"/>
                        </StackPanel>
                        <Grid Margin="0, 10, 0, 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox  Width="20" Height="20" Margin="0, 0, 5, 0" IsChecked="{Binding NewProfileLocalSavesCheck}"/>
                                <Label Content="Local Saves" Width="125" FontFamily="Arial" FontSize="12" Foreground="{StaticResource FontBrush}"/>
                            </StackPanel>                        
                            <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox Width="20" Height="20" Margin="0, 0, 5, 0" IsChecked="{Binding NewProfileLocalSettingsCheck}"/>
                                <Label Content="Local Settings" Width="125" FontFamily="Arial" FontSize="12" Foreground="{StaticResource FontBrush}"/>
                            </StackPanel>                       
                            <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 5, 0, 0">
                                <CheckBox Width="20" Height="20" Margin="0, 0, 5, 0" IsChecked="{Binding NewProfileLocalTrayCheck}"/>
                                <Label Content="Local Tray" Width="125" FontFamily="Arial" FontSize="12" Foreground="{StaticResource FontBrush}"/>
                            </StackPanel>                       
                            <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 5, 0, 0">
                                <CheckBox Width="20" Height="20" Margin="0, 0, 5, 0" IsChecked="{Binding NewProfileLocalScreenshotsCheck}"/>
                                <Label Content="Local Screenshots" Width="125" FontFamily="Arial" FontSize="12" Foreground="{StaticResource FontBrush}"/>
                            </StackPanel>
                        </Grid>
                        
                            
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Content="Save" Command="{Binding SaveProfile}"  Padding="0" Width="100" Height="25" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 10, 0"/>
                            <Button Content="Cancel" Command="{Binding CancelProfile}" Padding="0" Width="100" Height="25" FontFamily="Arial" FontSize="15" FontWeight="Bold" Background="{StaticResource ButtonBrush}" Foreground="{StaticResource ButtonTextBrush}" VerticalAlignment="Center" Margin="0, 5, 0, 0"/>
                        </StackPanel>                        
                    </StackPanel>
                </Grid>
                
                <Grid Width="400" Height="150" Grid.Row="2" Visibility="{Binding ProgressBarGridVis}">
                    <Border Background="{StaticResource MainBackgroundBrush}" BorderBrush="{StaticResource Brush15}" BorderThickness="2,2,2,2" 
                        Padding="0" CornerRadius="5 5 5 5" ClipToBounds="True" Margin="-0,0,0,0">
                    </Border> 
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <Label Content="{Binding ProgBarLabel}" FontFamily="Arial" FontSize="22" Foreground="{StaticResource Brush3}"/>
                        <ProgressBar IsIndeterminate="{Binding ProgIndet}" Background="{StaticResource Brush17}" Foreground="{StaticResource Brush27}" Height="25" Width="350" Margin="0, 10, 0, 0"/>
                    </StackPanel>                    
                </Grid>-->
            </Grid>
        </Border>
    </Grid>
</Window>
