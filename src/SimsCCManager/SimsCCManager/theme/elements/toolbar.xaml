<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:SimsCCManager.Themes.UIElements"
    xmlns:extensions="clr-namespace:SimsCCManager.UI.Utilities"
    x:Class="SimsCCManager.Themes.UIElements.Toolbar">
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="palette.xaml" />
        <ResourceDictionary Source="images.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <System:String x:Key="WindowTitle">Goodbye world</System:String>
      <System:Double x:Key="ButtonHeight">15</System:Double>
      <System:Double x:Key="ButtonWidth">15</System:Double>
      <ControlTemplate x:Key="NoMouseOverButtonTemplate" 
                 TargetType="Button">                
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          <!-- Add only required visual state triggers -->
          <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                      Value="False">
              <Setter Property="Background"
                      Value="{x:Static SystemColors.ControlLightBrush}" />
              <Setter Property="Foreground"
                      Value="{x:Static SystemColors.GrayTextBrush}" />
              </Trigger>
          </ControlTemplate.Triggers>
      </ControlTemplate>
    <ControlTemplate x:Key="ToolbarNoMax" TargetType="ContentControl">
      <Grid x:Name="TitleBar" MouseDown="ToolbarClickNoMax" Tag="{TemplateBinding Tag}" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Background="{StaticResource BarBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
        <Grid Margin="0, 0, 0, 5">          
          <Grid.Resources >
            <Style TargetType="Border" >
                <Setter Property="Padding" Value="5,5,5,5" />
            </Style>
          </Grid.Resources>
            <Label Foreground="{StaticResource BarTextBrush}" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding Content}" HorizontalAlignment="Center" Padding="0" FontSize="15"/>  
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button Width="{StaticResource ButtonWidth}" ForceCursor="true" Cursor="Hand" Height="{StaticResource ButtonHeight}" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Click="Minimize_Click" Margin="0, 0, 10, 0">
                    <Image Source="{StaticResource IconMin}"/>
                </Button>
                <Button Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" ForceCursor="true" Cursor="Hand" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Margin="0, 0, 10, 0">
                  <Rectangle Margin="0, 0, 0, 0" Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" HorizontalAlignment="Center" Fill="White">
                    <Rectangle.OpacityMask>
                        <ImageBrush AlignmentX="Left" Stretch="Fill" ImageSource="{StaticResource IconMax}"/>                      
                    </Rectangle.OpacityMask>
                  </Rectangle>
                </Button>
                <Button Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" ForceCursor="true" Cursor="Hand" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Click="CloseWindow_Click" Margin="0, 0, 10, 0">
                    <Image Source="{StaticResource IconX}"/>
                </Button>                    
            </StackPanel>
        </Grid>
      </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="Toolbar" TargetType="ContentControl">
      <Grid x:Name="TitleBar" MouseDown="ToolbarClick" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Background="{StaticResource BarBrush}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
        <Rectangle x:Name="LocationRect" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
          AncestorType={x:Type Window}},
          Path=DataContext.Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
          <Rectangle x:Name="MaximizedRect" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
            AncestorType={x:Type Window}},
            Path=DataContext.Maximized, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
          <Rectangle x:Name="OriginalSizeRect" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
            AncestorType={x:Type Window}},
            Path=DataContext.SmallSizeW, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
            AncestorType={x:Type Window}},
            Path=DataContext.SmallSizeH, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
          <Rectangle x:Name="ResizeRect" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
            AncestorType={x:Type Window}},
            Path=DataContext.WindowWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
            AncestorType={x:Type Window}},
            Path=DataContext.WindowHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden" Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
              AncestorType={x:Type Window}},
              Path=DataContext.Border, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>            
          <Grid Margin="0, 0, 0, 5">
          <Grid.Resources >
            <Style TargetType="Border" >
                <Setter Property="Padding" Value="5,5,5,5" />
            </Style>
          </Grid.Resources>
            <Label Foreground="{StaticResource BarTextBrush}" VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{TemplateBinding Content}" HorizontalAlignment="Center" Padding="0" FontSize="15"/>  
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Click="Minimize_Click" Margin="0, 0, 10, 0">
                    <Image Source="{StaticResource IconMin}"/>
                </Button>
                <Button Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Click="Maximize_Click" Margin="0, 0, 10, 0">
                    <Image Source="{StaticResource IconMax}"/>
                </Button>
                <Button Width="{StaticResource ButtonWidth}" Height="{StaticResource ButtonHeight}" Padding="0" Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Template="{StaticResource NoMouseOverButtonTemplate}" Click="CloseWindow_Click" Margin="0, 0, 10, 0">
                    <Image Source="{StaticResource IconX}"/>
                </Button>                    
            </StackPanel>
        </Grid>
    </Grid>
  </ControlTemplate>
</ResourceDictionary> 